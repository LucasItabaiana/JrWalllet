//LOGAR:

if (username.isEmpty() || password.isEmpty()) {
                    status = "Por favor, preencha todos os campos."
                } else {
                    // Lógica de autenticação
                    if (username == "usuario" && password == "senha") {
                        status = "Login bem-sucedido!"
                        // Navegar para a próxima tela ou executar outras ações após o login
                    } else {
                        status = "Credenciais inválidas. Tente novamente."
                    }
                }


//ESTABELECER METAS:
import androidx.compose.foundation.layout.*
import androidx.compose.material.*
import androidx.compose.runtime.*
import androidx.compose.ui.Modifier
import androidx.compose.ui.text.input.TextFieldValue
import androidx.compose.ui.unit.dp

@Composable
fun GoalScreen() {
    var metaText by remember { mutableStateOf(TextFieldValue()) }

    Column(
        modifier = Modifier
            .padding(16.dp)
            .fillMaxWidth(),
        verticalArrangement = Arrangement.Center
    ) {
        OutlinedTextField(
            value = metaText,
            onValueChange = { metaText = it },
            label = { Text("Meta") },
            modifier = Modifier
                .fillMaxWidth()
                .padding(vertical = 8.dp)
        )

        Button(
            onClick = {
                val meta = metaText.text.toFloatOrNull()
                if (meta != null) {
                    // Lógica para salvar a meta ou outras ações necessárias
                    val context = LocalContext.current
                    AlertDialog(
                        onDismissRequest = { },
                        title = { Text("Meta confirmada") },
                        text = { Text("Sua meta de R$ ${"%.2f".format(meta)} foi estabelecida.") },
                        confirmButton = {
                            Button(
                                onClick = { /* Dismiss */ },
                            ) {
                                Text("OK")
                            }
                        },
                        modifier = Modifier.padding(vertical = 8.dp)
                    )
                } else {
                    // Exibir um alerta indicando que a entrada não é válida
                    val context = LocalContext.current
                    AlertDialog(
                        onDismissRequest = { },
                        title = { Text("Erro") },
                        text = { Text("Por favor, insira um valor válido para a meta.") },
                        confirmButton = {
                            Button(
                                onClick = { /* Dismiss */ },
                            ) {
                                Text("OK")
                            }
                        },
                        modifier = Modifier.padding(vertical = 8.dp)
                    )
                }
            },
            modifier = Modifier
                .fillMaxWidth()
                .padding(vertical = 8.dp)
        ) {
            Text("Confirmar Meta")
        }
    }
} 

//Tela de LaunchScreen que direciona o usuário para a tela de cadastro: 

package com.example.jrwallet

import androidx.appcompat.app.AppCompatActivity
import android.content.Intent
import android.os.Bundle
import android.widget.ImageView

class MainActivity : AppCompatActivity() {
    lateinit var irParaLogin : ImageView
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_main)

        irParaLogin = findViewById(R.id.btnIrParaLogin)

        irParaLogin.setOnClickListener { chamatela() }
    }

    fun chamatela(){
        startActivity(Intent(this, Login::class.java))
    }
}
